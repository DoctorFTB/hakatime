version: 2.1
jobs:
  build_tagged_arm_image:
    environment:
      IMAGE_NAME: mujx/hakatime
      IMAGE_ARM_TAG: << pipeline.git.tag >>-arm
      DOCKERHUB_USERNAME: mujx
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run:
          name: Build image
          command: docker build -f Dockerfile.arm -t $IMAGE_NAME:$IMAGE_ARM_TAG .
      - run:
          name: Publish image to DockerHub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_ARM_TAG
  build_arm_image:
    environment:
      IMAGE_NAME: mujx/hakatime
      IMAGE_ARM_TAG: latest-arm
      DOCKERHUB_USERNAME: mujx
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run:
          name: Build image
          command: docker build -f Dockerfile.arm -t $IMAGE_NAME:$IMAGE_ARM_TAG .
      - run:
          name: Publish image to DockerHub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_ARM_TAG
  build_server:
    docker:
      - image: nixos/nix:2.3
    steps:
      - checkout
      - run:
          name: "Build"
          command: nix-build --pure release.nix
      - run:
          name: "HLint"
          command: nix-shell --run "hlint src && hlint app"
  build_dashboard:
    docker:
      - image: circleci/node:12.18
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "./dashboard/package.json" }}
      - run:
          name: "Install dependencies"
          command: cd dashboard && yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "./dashboard/package.json" }}
          paths:
            - ./dashboard/node_modules
      - run:
          name: "Build"
          command: cd dashboard && yarn run prod
      - run:
          name: "Lint"
          command: cd dashboard && yarn run lint
      - run:
          name: "Format"
          command: cd dashboard && yarn run fmt

workflows:
  version: 2
  build_all:
    jobs:
      - build_server
      - build_dashboard
      - build_tagged_arm_image
          filters:
            tags:
              only:
                - "/^v.*/"
      - build_arm_image:
          filters:
            branches:
              only:
                - "master"
